1번
Memoization과 Recursive

Memoization을 사용한다면 첫 번째 호출 때 결과를 저장해놓고
두번 째 호출부턴 저장해놓은 결과 값을 바로 불러오기 때문에 
계산해야 하는 양이 많을 수록 효과가 높아진다.
반면 재귀적인 방법은 같은 값이라도 다시 계산해야 하기 때문에 성능이 좋지 않다.
가독성 면에선 재귀적인 방법이 더 좋은 것 같다.

2번
Top-Down
큰 문제부터 해결하면서 작은 문제를 필요할 때 해결
장점 : 코드를 이해하기 쉽다
단점 : 시간이 오래 걸릴 수 있다.

Bottom-Up
작은 문제부터 시작하여 큰 문제를 해결하는 방법.
장점 : 시간을 단축 시킬 수 있다.
단점 : 가독성이 저하된다.

DP는 이중에 Bottom-Up 방식이다.
